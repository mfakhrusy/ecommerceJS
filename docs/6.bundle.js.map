{"version":3,"sources":["webpack:///./src/containers/views/categories/CategoriesContainer.js","webpack:///./src/components/views/categories/CategoryItem.js","webpack:///./src/components/views/categories/CategoryContent.js","webpack:///./src/containers/views/categories/CategoryContentContainer.js","webpack:///./src/components/views/categories/Categories.js"],"names":["_reactRedux","__webpack_require__","_Categories","_categoriesActions","CategoriesContainer","connect","state","categories","categoriesHasErrored","categoriesIsLoading","dispatch","fetchData","url","categoriesFetchData","_Categories2","default","CategoryItem","_react2","Component","_props","this","props","category","onClick","createElement","_Cell2","key","id","className","_Card2","label","_Buttons2","icon","mdIcon","propTypes","_propTypes2","object","isRequired","func","_reactRouterDom","CategoryContent","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleClick","bind","setFilterCategories","showSidebar","history","push","_this2","_Grid2","containers","map","_CategoryItem2","type","arrayOf","withRouter","_CategoryContent","_mainpageActions","CategoryContentContainer","bool","_CategoryContent2","Categories","_ViewsContainer2","pathname","location","inset","nav","_BackButton2","_CategoryContentContainer2"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import { connect } from 'react-redux';\nimport Categories from 'components/views/categories/Categories';\nimport { categoriesFetchData } from 'actions/views/categoriesActions';\n\nconst mapStateToProps = state => ({\n  categories: state.categories,\n  categoriesHasErrored: state.categoriesHasErrored,\n  categoriesIsLoading: state.categoriesIsLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: (url) => {\n    dispatch(categoriesFetchData(url));\n  },\n});\n\nconst CategoriesContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Categories);\n\nexport default CategoriesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Cell, Card, Button } from 'react-md';\nimport Cell from 'react-md/lib/Grids/Cell';\nimport Card from 'react-md/lib/Cards/Card';\nimport Button from 'react-md/lib/Buttons';\n\nclass CategoryItem extends React.Component {\n  render() {\n    const { category, onClick } = this.props;\n    return (\n      <Cell key={category.id} className=\"CategoryItem\" id={`category-category-${category.id}`}>\n        <Card\n          className=\"CategoryItemCard\"\n          id={`category-category-card-${category.id}`}\n          onClick={onClick}\n        >\n          <div>\n            {category.label}\n          </div>\n          <Button\n            icon\n          >\n            {category.mdIcon}\n          </Button>\n        </Card>\n      </Cell>\n    );\n  }\n}\n\nCategoryItem.propTypes = {\n  category: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default CategoryItem;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Grid from 'react-md/lib/Grids/Grid';\nimport CategoryItem from 'components/views/categories/CategoryItem';\n\nclass CategoryContent extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(category) {\n    this.props.setFilterCategories(category);\n    this.props.showSidebar(false);\n    this.props.history.push('/');\n  }\n  render() {\n    const { categories } = this.props;\n    return (\n      <Grid containers=\"categories\" className=\"CategoryContent\" id=\"category-content\">\n        {categories.map(category => (\n          <CategoryItem\n            key={category.id}\n            category={category}\n            onClick={() => { this.handleClick(category.type); }}\n          />\n        ))}\n      </Grid>\n    );\n  }\n}\nCategoryContent.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setFilterCategories: PropTypes.func.isRequired,\n  showSidebar: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(CategoryContent);\n","import { connect } from 'react-redux';\nimport CategoryContent from 'components/views/categories/CategoryContent';\nimport { setFilterCategories } from 'actions/views/categoriesActions';\nimport { showSidebar } from 'actions/mainpage/mainpageActions';\n\nconst mapDispatchToProps = dispatch => ({\n  setFilterCategories: (category) => {\n    dispatch(setFilterCategories(category));\n  },\n  showSidebar: (bool) => {\n    dispatch(showSidebar(bool));\n  },\n});\n\nconst CategoryContentContainer = connect(\n  null,\n  mapDispatchToProps,\n)(CategoryContent);\n\nexport default CategoryContentContainer;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CategoryContentContainer from 'containers/views/categories/CategoryContentContainer';\nimport BackButton from 'components/views/BackButton';\nimport ViewsContainer from 'containers/views/ViewsContainer';\n\nclass Categories extends React.Component {\n  render() {\n    return (\n      <ViewsContainer\n        pathname={this.props.location.pathname}\n        inset\n        className=\"Categories\"\n        nav={<BackButton />}\n      >\n        <CategoryContentContainer categories={this.props.categories} />\n      </ViewsContainer>\n    );\n  }\n}\n\nCategories.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Categories);\n"],"sourceRoot":""}