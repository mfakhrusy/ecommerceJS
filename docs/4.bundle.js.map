{"version":3,"sources":["webpack:///./src/containers/views/chats/ChatsContainer.js","webpack:///./src/components/views/BackButton.js","webpack:///./src/components/views/ViewNavbar.js","webpack:///./src/components/views/Views.js","webpack:///./src/containers/views/ViewsContainer.js","webpack:///./src/components/views/chats/TabList.js","webpack:///./src/components/views/chats/TabSell.js","webpack:///./src/components/views/chats/TabBuy.js","webpack:///./src/components/views/chats/TabBlock.js","webpack:///./src/components/views/chats/TabAll.js","webpack:///./src/components/views/chats/ChatContent.js","webpack:///./src/components/views/chats/Chats.js"],"names":["_reactRedux","__webpack_require__","_Chats","_chatsActions","ChatsContainer","connect","state","chats","chatsHasErrored","chatsIsLoading","dispatch","fetchData","url","chatsFetchData","_Chats2","default","_reactRouterDom","BackButton","_react2","Component","_this2","this","createElement","_SVGButtonMD2","className","props","onClick","history","push","_arrow_back2","height","width","propTypes","_propTypes2","string","isRequired","object","withRouter","ViewNavbar","_ref","inset","fixed","nav","title","actions","_Toolbar2","id","defaultProps","_Buttons2","icon","bool","element","oneOfType","arrayOf","Views","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","isVisible","undefined","pathname","setState","paperClassNames","_classnames2","view-paper","view-fixed","view-inset","_Drawers2","type","DrawerTypes","TEMPORARY","defaultVisible","position","_ViewNavbar2","_Papers2","children","Fragment","_Views","_mainpageActions","ViewsContainer","isSidebarOpen","showSidebar","_Views2","TabList","_Grid2","map","chat","dateString","content","_Card2","key","src","imageUrl","alt","imageDescription","name","createdAt","Date","toDateString","slice","_Avatars2","avatarUrl","TabSell","_TabList2","TabBuy","TabBlock","TabAll","_react","_Tabs","ChatContent","chatsAll","filter","chatsBuy","chatsSell","chatsBlock","TabsContainer","themed","Tabs","inactiveTabClassName","mobile","tabId","Tab","label","_TabAll2","_TabBuy2","_TabSell2","_TabBlock2","accessibilityProps","aria-busy","aria-describedby","Chats","length","_urls2","_CircularProgress2","_ChatContent2","_ViewsContainer2","location","_BackButton2","func"],"mappings":"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","file":"4.bundle.js","sourcesContent":["import { connect } from 'react-redux';\nimport Chats from 'components/views/chats/Chats';\nimport { chatsFetchData } from 'actions/views/chatsActions';\n\nconst mapStateToProps = state => ({\n  chats: state.chats,\n  chatsHasErrored: state.chatsHasErrored,\n  chatsIsLoading: state.chatsIsLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: (url) => {\n    dispatch(chatsFetchData(url));\n  },\n});\n\nconst ChatsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Chats);\n\nexport default ChatsContainer;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { Button } from 'react-md';\n// import Button from 'react-md/lib/Buttons';\nimport ArrowBack from 'assets/svg/arrow_back.svg';\nimport SVGButtonMD from 'components/utils/SVGButtonMD';\n\nclass BackButton extends React.Component {\n  render() {\n    return (\n      // <Button\n      //   icon\n      //   className={this.props.className}\n      //   onClick={() => { this.props.history.push('/'); }}\n      // >\n      //   arrow_back\n      // </Button>\n      <SVGButtonMD\n        className={this.props.className}\n        onClick={() => { this.props.history.push('/'); }}\n      >\n        <ArrowBack height={30} width={30} />\n      </SVGButtonMD>\n    );\n  }\n}\n\nBackButton.propTypes = {\n  className: PropTypes.string.isRequired,\n  // onClick: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(BackButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Toolbar, Button } from 'react-md';\nimport Button from 'react-md/lib/Buttons';\nimport Toolbar from 'react-md/lib/Toolbars/Toolbar';\n\nconst ViewNavbar = ({\n  inset,\n  fixed,\n  nav,\n  title,\n  actions,\n}) => (\n  <Toolbar\n    className=\"ViewNavbar\"\n    id=\"view-navbar\"\n    inset={inset}\n    fixed={fixed}\n    nav={nav}\n    title={title === '' ? '' : <div className=\"ViewNavbarTitle\">{title}</div>}\n    actions={actions}\n  />\n);\n\nViewNavbar.defaultProps = {\n  inset: false,\n  fixed: false,\n  nav: <Button icon>menu</Button>,\n  title: '',\n  actions: <Button icon>more_vert</Button>,\n};\n\nViewNavbar.propTypes = {\n  inset: PropTypes.bool,\n  fixed: PropTypes.bool,\n  nav: PropTypes.element,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n};\n\nexport default ViewNavbar;\n","/* eslint-disable react/no-did-mount-set-state, react/no-unused-state */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { Drawer, Paper, Button } from 'react-md';\nimport Drawer from 'react-md/lib/Drawers';\nimport Paper from 'react-md/lib/Papers';\nimport Button from 'react-md/lib/Buttons';\nimport ViewNavbar from 'components/views/ViewNavbar';\nimport classNames from 'classnames';\n\nclass Views extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.pathname !== undefined) {\n      this.setState({ isVisible: true });\n      // unmount the sidebar --> edit, no longer required, IDK WHY THOUGH.\n      // this.props.onClick(!this.props.isSidebarOpen);\n      // this.props.onClick(false);\n    }\n  }\n\n  render() {\n    const paperClassNames = classNames({\n      'view-paper': true,\n      'view-fixed': this.props.fixed,\n      'view-inset': this.props.inset,\n      // !! -> change to boolean.\n      [this.props.className]: !!this.props.className,\n    });\n\n    return (\n      <Drawer\n        className=\"Views\"\n        type={Drawer.DrawerTypes.TEMPORARY}\n        defaultVisible\n        position=\"right\"\n      >\n        <ViewNavbar\n          inset={this.props.inset}\n          fixed={this.props.fixed}\n          nav={this.props.nav}\n          title={this.props.title}\n          actions={this.props.actions}\n        />\n        <Paper className={paperClassNames}>\n          {this.props.children}\n        </Paper>\n      </Drawer>\n    );\n  }\n}\n\nViews.defaultProps = {\n  inset: false,\n  fixed: false,\n  className: '',\n  nav: <Button icon>menu</Button>,\n  title: '',\n  actions: <React.Fragment />, // default props, a little bit of hack\n};\n\nViews.propTypes = {\n  // isSidebarOpen: PropTypes.bool.isRequired,\n  // onClick: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n  pathname: PropTypes.string.isRequired,\n  nav: PropTypes.element,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  actions: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)]),\n  className: PropTypes.string,\n  fixed: PropTypes.bool,\n  inset: PropTypes.bool,\n};\n\nexport default Views;\n","import { connect } from 'react-redux';\nimport Views from 'components/views/Views';\nimport { showSidebar } from 'actions/mainpage/mainpageActions';\n\nconst mapStateToProps = state => ({\n  isSidebarOpen: state.isSidebarOpen,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: (bool) => {\n    dispatch(showSidebar(bool));\n  },\n});\n\nconst ViewsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Views);\n\nexport default ViewsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Grid, Card, Avatar } from 'react-md';\nimport Grid from 'react-md/lib/Grids/Grid';\nimport Avatar from 'react-md/lib/Avatars';\nimport Card from 'react-md/lib/Cards/Card';\n\n// slice(4) will omit the day\nconst dateFormatter = dateString => new Date(dateString).toDateString().slice(4);\n\nconst TabList = ({ chats }) => (\n  <Grid className=\"TabList\" id=\"tab-list\">\n    {chats.map((chat) => {\n      let content = null;\n      if (chat.type === 'buy') {\n        content = 'To: ';\n      } else if (chat.type === 'sell') {\n        content = 'From: ';\n      } else if (chat.type === 'block') {\n        content = 'Blocked: ';\n      }\n      return (\n        <Card className=\"TabListCard\" key={chat.id}>\n          <div className=\"TabListCard-grid-image\">\n            <img src={chat.imageUrl} alt={chat.imageDescription} />\n          </div>\n          <div className=\"TabListCard-grid-name\">\n            <p><strong>{content}{chat.name}</strong></p>\n          </div>\n          <div className=\"TabListCard-grid-description\">\n            <p>{chat.imageDescription}</p>\n          </div>\n          <div className=\"TabListCard-grid-date\">\n            <p>{dateFormatter(chat.createdAt)}</p>\n          </div>\n          <div className=\"TabListCard-grid-avatar\">\n            <Avatar src={chat.avatarUrl} className=\"TabListCardAvatar\" />\n          </div>\n        </Card>\n      );\n    })}\n  </Grid>\n);\n\nTabList.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TabList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabList from 'components/views/chats/TabList';\n\nconst TabSell = ({ chats }) => (\n  <TabList chats={chats} />\n);\n\nTabSell.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TabSell;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabList from 'components/views/chats/TabList';\n\nconst TabBuy = ({ chats }) => (\n  <TabList chats={chats} />\n);\n\nTabBuy.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TabBuy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabList from 'components/views/chats/TabList';\n\nconst TabBlock = ({ chats }) => (\n  <TabList chats={chats} />\n);\n\nTabBlock.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TabBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabList from 'components/views/chats/TabList';\n\nconst TabAll = ({ chats }) => (\n  <TabList chats={chats} />\n);\n\nTabAll.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TabAll;\n","import React, { Component } from 'react';\n// import { TabsContainer, Tabs, Tab } from 'react-md';\nimport { TabsContainer, Tabs, Tab } from 'react-md/lib/Tabs';\nimport TabAll from 'components/views/chats/TabAll';\nimport TabBlock from 'components/views/chats/TabBlock';\nimport TabBuy from 'components/views/chats/TabBuy';\nimport TabSell from 'components/views/chats/TabSell';\nimport PropTypes from 'prop-types';\n\nclass ChatContent extends Component {\n  render() {\n    // filter each type\n    const chatsAll = this.props.chats.filter(chat => chat.type !== 'block');\n    // buy means user want to buy\n    const chatsBuy = this.props.chats.filter(chat => chat.type === 'buy');\n    // sell means user sell chat.\n    const chatsSell = this.props.chats.filter(chat => chat.type === 'sell');\n    // block means blocked user (from either buy/sell)\n    const chatsBlock = this.props.chats.filter(chat => chat.type === 'block');\n\n    return (\n      <TabsContainer\n        themed\n        className=\"ChatContent\"\n      >\n        <Tabs\n          inactiveTabClassName=\"md-text--secondary\"\n          mobile\n          tabId=\"chat-tab-menu\"\n          className=\"ChatContentTabs\"\n          id=\"chat-content-tabs\"\n        >\n          <Tab label=\"all\">\n            <TabAll chats={chatsAll} />\n          </Tab>\n          <Tab label=\"buy\">\n            <TabBuy chats={chatsBuy} />\n          </Tab>\n          <Tab label=\"sell\">\n            <TabSell chats={chatsSell} />\n          </Tab>\n          <Tab label=\"block\">\n            <TabBlock chats={chatsBlock} />\n          </Tab>\n        </Tabs>\n      </TabsContainer>\n    );\n  }\n}\n\nChatContent.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ChatContent;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { CircularProgress } from 'react-md';\nimport CircularProgress from 'react-md/lib/Progress/CircularProgress';\nimport urls from 'constants/urls';\nimport ChatContent from 'components/views/chats/ChatContent';\nimport BackButton from 'components/views/BackButton';\nimport ViewsContainer from 'containers/views/ViewsContainer';\n\nconst accessibilityProps = {\n  'aria-busy': true,\n  'aria-describedby': 'chats-loading-progress',\n};\n\nclass Chats extends React.Component {\n  componentDidMount() {\n    // check whether the data has been downloaded\n    // if it has, then we don't download it all over again\n    // if it hasn't, download here.\n    if (!this.props.chatsIsLoading && !(this.props.chats.length > 0)) {\n      this.props.fetchData(urls.chats.url);\n    }\n  }\n\n  render() {\n    let content = null;\n\n    if (this.props.chatsHasErrored) {\n      content = <h1>Chats Display Error!</h1>;\n    } else if (this.props.chatsIsLoading) {\n      accessibilityProps['aria-busy'] = false;\n      content = <CircularProgress id={accessibilityProps['aria-describedby']} />;\n    } else {\n      content = <ChatContent chats={this.props.chats} />;\n    }\n\n    return (\n      <ViewsContainer\n        pathname={this.props.location.pathname}\n        inset\n        className=\"Chats\"\n        nav={<BackButton />}\n      >\n        {content}\n      </ViewsContainer>\n    );\n  }\n}\n\nChats.propTypes = {\n  chats: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.object.isRequired,\n  chatsHasErrored: PropTypes.bool.isRequired,\n  chatsIsLoading: PropTypes.bool.isRequired,\n  fetchData: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Chats);\n"],"sourceRoot":""}