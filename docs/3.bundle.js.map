{"version":3,"sources":["webpack:///./src/components/views/sell/Sell.js","webpack:///./src/components/views/BackButton.js","webpack:///./src/containers/views/ViewsContainer.js","webpack:///./src/components/views/ViewNavbar.js","webpack:///./src/components/views/Views.js","webpack:///./src/components/views/sell/SellFooter.js","webpack:///./src/assets/images/placeholder_400_400.png","webpack:///./src/components/views/sell/DisplayImage.js"],"names":["__webpack_require__","_reactRouterDom","Sell","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleFiles","bind","state","file","_react2","default","Component","event","setState","target","files","_this2","createElement","_ViewsContainer2","pathname","props","location","inset","className","nav","_BackButton2","Fragment","type","accept","onChange","_DisplayImage2","_SellFooter2","propTypes","_propTypes2","object","isRequired","withRouter","BackButton","_Buttons2","icon","onClick","history","push","string","_reactRedux","_Views","_mainpageActions","ViewsContainer","connect","isSidebarOpen","dispatch","bool","showSidebar","_Views2","ViewNavbar","_ref","fixed","title","actions","_Toolbar2","id","defaultProps","element","oneOfType","arrayOf","Views","isVisible","undefined","paperClassNames","_classnames2","view-paper","view-fixed","view-inset","_Drawers2","DrawerTypes","TEMPORARY","defaultVisible","position","_ViewNavbar2","_Papers2","children","SellFooter","flat","primary","swapTheming","module","exports","p","_Cards","image","DisplayImage","imageSrc","displayImage","reader","FileReader","Blob","readAsDataURL","onload","result","Card","src","alt"],"mappings":"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","file":"3.bundle.js","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { Card } from 'react-md/lib/Cards';\nimport DisplayImage from 'components/views/sell/DisplayImage';\nimport ViewsContainer from 'containers/views/ViewsContainer';\nimport BackButton from 'components/views/BackButton';\nimport SellFooter from 'components/views/sell/SellFooter';\n\nclass Sell extends React.Component {\n  constructor() {\n    super();\n\n    this.handleFiles = this.handleFiles.bind(this);\n    // this.handleLoad = this.handleLoad.bind(this);\n    this.state = {\n      file: {},\n      // image: {},\n    };\n  }\n\n  handleFiles(event) {\n    this.setState({ file: event.target.files[0] });\n    // const xhr = new XMLHttpRequest();\n    // const reader = new FileReader();\n    // console.log(reader);\n    // xhr.onreadystatechange = () => {\n\n    // }\n    // reader.readAsDataURL(event.target.files[0]);\n    // this.setState({ image: reader.result });\n  }\n\n  // handleLoad(event) {\n  //   console.log('TESSSS');\n  //   const reader = new FileReader();\n  //   reader.readAsDataURL(event.target.files[0]);\n  //   this.setState({ image: reader.result });\n  // }\n\n  render() {\n    // console.log(this.state);\n    return (\n      <ViewsContainer\n        pathname={this.props.location.pathname}\n        inset\n        className=\"Sell\"\n        nav={<BackButton />}\n      >\n        <React.Fragment>\n          <input\n            type=\"file\"\n            accept=\"image/*;capture=camera\"\n            onChange={(event) => { this.handleFiles(event); }}\n            // onLoad={(event) => { this.handleLoad(event); }}\n          />\n          <DisplayImage file={this.state.file} />\n          <SellFooter />\n        </React.Fragment>\n      </ViewsContainer>\n    );\n  }\n}\n\nSell.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Sell);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import { Button } from 'react-md';\nimport Button from 'react-md/lib/Buttons';\n\nclass BackButton extends React.Component {\n  render() {\n    return (\n      <Button\n        icon\n        className={this.props.className}\n        onClick={() => { this.props.history.push('/'); }}\n      >\n        arrow_back\n      </Button>\n    );\n  }\n}\n\nBackButton.propTypes = {\n  className: PropTypes.string.isRequired,\n  // onClick: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(BackButton);\n","import { connect } from 'react-redux';\nimport Views from 'components/views/Views';\nimport { showSidebar } from 'actions/mainpage/mainpageActions';\n\nconst mapStateToProps = state => ({\n  isSidebarOpen: state.isSidebarOpen,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: (bool) => {\n    dispatch(showSidebar(bool));\n  },\n});\n\nconst ViewsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Views);\n\nexport default ViewsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Toolbar, Button } from 'react-md';\nimport Button from 'react-md/lib/Buttons';\nimport Toolbar from 'react-md/lib/Toolbars/Toolbar';\n\nconst ViewNavbar = ({\n  inset,\n  fixed,\n  nav,\n  title,\n  actions,\n}) => (\n  <Toolbar\n    className=\"ViewNavbar\"\n    id=\"view-navbar\"\n    inset={inset}\n    fixed={fixed}\n    nav={nav}\n    title={title === '' ? '' : <div className=\"ViewNavbarTitle\">{title}</div>}\n    actions={actions}\n  />\n);\n\nViewNavbar.defaultProps = {\n  inset: false,\n  fixed: false,\n  nav: <Button icon>menu</Button>,\n  title: '',\n  actions: <Button icon>more_vert</Button>,\n};\n\nViewNavbar.propTypes = {\n  inset: PropTypes.bool,\n  fixed: PropTypes.bool,\n  nav: PropTypes.element,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n};\n\nexport default ViewNavbar;\n","/* eslint-disable react/no-did-mount-set-state, react/no-unused-state */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { Drawer, Paper, Button } from 'react-md';\nimport Drawer from 'react-md/lib/Drawers';\nimport Paper from 'react-md/lib/Papers';\nimport Button from 'react-md/lib/Buttons';\nimport ViewNavbar from 'components/views/ViewNavbar';\nimport classNames from 'classnames';\n\nclass Views extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.pathname !== undefined) {\n      this.setState({ isVisible: true });\n      // unmount the sidebar --> edit, no longer required, IDK WHY THOUGH.\n      // this.props.onClick(!this.props.isSidebarOpen);\n      // this.props.onClick(false);\n    }\n  }\n\n  render() {\n    const paperClassNames = classNames({\n      'view-paper': true,\n      'view-fixed': this.props.fixed,\n      'view-inset': this.props.inset,\n      // !! -> change to boolean.\n      [this.props.className]: !!this.props.className,\n    });\n\n    return (\n      <Drawer\n        className=\"Views\"\n        type={Drawer.DrawerTypes.TEMPORARY}\n        defaultVisible\n        position=\"right\"\n      >\n        <ViewNavbar\n          inset={this.props.inset}\n          fixed={this.props.fixed}\n          nav={this.props.nav}\n          title={this.props.title}\n          actions={this.props.actions}\n        />\n        <Paper className={paperClassNames}>\n          {this.props.children}\n        </Paper>\n      </Drawer>\n    );\n  }\n}\n\nViews.defaultProps = {\n  inset: false,\n  fixed: false,\n  className: '',\n  nav: <Button icon>menu</Button>,\n  title: '',\n  actions: <React.Fragment />, // default props, a little bit of hack\n};\n\nViews.propTypes = {\n  // isSidebarOpen: PropTypes.bool.isRequired,\n  // onClick: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n  pathname: PropTypes.string.isRequired,\n  nav: PropTypes.element,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  actions: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element)]),\n  className: PropTypes.string,\n  fixed: PropTypes.bool,\n  inset: PropTypes.bool,\n};\n\nexport default Views;\n","import React from 'react';\n// import { withRouter } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import { Button } from 'react-md';\nimport Button from 'react-md/lib/Buttons';\n\nclass SellFooter extends React.Component {\n  // constructor() {\n  //   super();\n\n  //   this.handleClick = this.handleClick.bind(this);\n  // }\n\n  // handleClick(category, price) {\n  //   this.props.setFilterCategories(category);\n  //   this.props.setFilterPrice(price);\n  //   this.props.history.push('/');\n  // }\n\n  render() {\n    return (\n      <div className=\"SellFooter\">\n        <Button\n          flat\n        >\n          Reset\n        </Button>\n        <Button\n          flat\n          primary\n          swapTheming\n          // onClick={() => {\n          //   this.handleClick(this.props.filter.category, this.props.filter.price);\n          // }}\n        >\n          Submit\n        </Button>\n      </div>\n    );\n  }\n}\n\n// SellFooter.propTypes = {\n//   filter: PropTypes.object.isRequired,\n//   setFilterCategories: PropTypes.func.isRequired,\n//   setFilterPrice: PropTypes.func.isRequired,\n//   history: PropTypes.object.isRequired,\n// };\n\n// export default withRouter(SellFooter);\nexport default SellFooter;\n","module.exports = __webpack_public_path__ + \"a581e65a3a79ef220f645a096d9f5c11.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'react-md/lib/Cards';\n\nconst image = require('assets/images/placeholder_400_400.png');\n\nclass DisplayImage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      imageSrc: image,\n    };\n    this.displayImage = this.displayImage.bind(this);\n  }\n\n  displayImage() {\n    // to display image, we need the FileReader API\n    const reader = new FileReader();\n    // because this.props.file default is common object,\n    // we need to check whether the file has been picked or not.\n    // if the file has been picked/chosen, the type is changed into Blob.\n    // we're using that for checking\n    if (this.props.file instanceof Blob) {\n      // need to read the file as a data URL (url representing of data)\n      reader.readAsDataURL(this.props.file);\n      // the readAsDataURL is an async method\n      // which will load if readystatechange is 2 on FileReader\n      // or after it's succesfully loader, we'll use onload event handler to catch that\n      reader.onload = (event) => {\n        // set the state of src.\n        // result contain a string for displaying the image\n        // on the img's src attribute\n        this.setState({ imageSrc: event.target.result });\n      };\n    }\n  }\n\n  render() {\n    // const content = this.state.image.length === 0 ? '' : this.state.image;\n    this.displayImage();\n    return (\n      <Card className=\"DisplayImage\">\n        {/* {this.state.imageSrc === '' ? '' : <img src={this.state.imageSrc} alt=\"tes\" />} */}\n        <img src={this.state.imageSrc} alt=\"tes\" />\n      </Card>\n    );\n  }\n}\n\nDisplayImage.propTypes = {\n  file: PropTypes.object.isRequired,\n};\n\nexport default DisplayImage;\n"],"sourceRoot":""}